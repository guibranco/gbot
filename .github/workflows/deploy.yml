name: Deploy via ftp

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to FTP
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        uses: "php-actions/composer@v6"
        with:
          dev: no
          progress: yes
          working_dir: "./Src/"

      - name: Create .htaccess secrets file
        run: |
          cd Src
          mkdir -p secrets
          cd secrets
          echo "<?php" >> .htaccess
      
      - name: Generate AppVeyor secrets file
        run: |
          cd Src
          mkdir -p secrets
          cd secrets
          echo "<?php" >> appVeyor.secrets.php
          echo "\$appVeyorKey = \"${{ secrets.APPVEYOR_KEY }}\";" >> appVeyor.secrets.php

      - name: Generate GitHub App secrets file
        run: |
          cd Src
          mkdir -p secrets
          cd secrets
          echo "<?php" >> gitHubApp.secrets.php
          echo "\$gitHubUserToken        = \"${{ secrets.USER_TOKEN }}\";" >> gitHubApp.secrets.php
          echo "\$gitHubAppId            = \"${{ secrets.APP_ID }}\";" >> gitHubApp.secrets.php
          echo "\$gitHubAppPrivateKey    = \"${{ secrets.APP_PRIVATE_KEY}}\";" >> gitHubApp.secrets.php
          echo "\$gitHubWebhookEndpoint  = \"${{ secrets.WEBHOOK_ENDPOINT }}\";" >> gitHubApp.secrets.php
          echo "\$gitHubWebhookSignature = \"${{ secrets.WEBHOOK_SIGNATURE }}\";" >> gitHubApp.secrets.php

      - name: Generate HealthChecksIo secrets file
        run: |
          cd Src
          mkdir -p secrets
          cd secrets
          echo "<?php" >> healthChecksIo.secrets.php
          echo "\$healthChecksIoComments     = \"${{ secrets.HEALTHCHECKSIO_COMMENTS }}\";" >> healthChecksIo.secrets.php
          echo "\$healthChecksIoPullRequests = \"${{ secrets.HEALTHCHECKSIO_PULL_REQUESTS }}\";" >> healthChecksIo.secrets.php
          echo "\$healthChecksIoSignature    = \"${{ secrets.HEALTHCHECKSIO_SIGNATURE }}\";" >> healthChecksIo.secrets.php

      - name: Create MySQL secrets file
        run: |
          cd Src
          mkdir -p secrets
          cd secrets
          echo "<?php" >> mySql.secrets.php
          echo "\$mySqlHost     = \"127.0.0.1\";" >> mySql.secrets.php
          echo "\$mySqlUser     = \"${{ secrets.MYSQL_USER }}\";" >> mySql.secrets.php
          echo "\$mySqlPassword = \"${{ secrets.MYSQL_PASSWORD }}\";" >> mySql.secrets.php
          echo "\$mySqlDatabase = \"${{ secrets.MYSQL_DATABASE }}\";" >> mySql.secrets.php

      - name: Upload service
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          localDir: "Src"
          remoteDir: "/"

  create_release:
    name: Create release
    needs: deploy
    env:
      SEMVER: ${{ needs.deploy.outputs.semVer }}
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: false
          draft: false
          makeLatest: true
          tag: v${{ env.SEMVER }}
          name: Release v${{ env.SEMVER }}
          generateReleaseNotes: true
          body: Release ${{ env.SEMVER }} of GStraccini-bot
